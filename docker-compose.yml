version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: docker/back/Dockerfile
    container_name: backend
    command: /wait-for-it.sh uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./backend:/app
    env_file:
      - .env
    restart: always
    depends_on:
      - db
    networks:
      - internal

  nginx:
    build:
      context: .
      dockerfile: docker/front/Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - internal

  certgen:
    image: alpine:latest
    container_name: certgen
    volumes:
      - ./docker/ssl:/certs
      - ./docker/certgen/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh

  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - internal

networks:
  internal:
    driver: bridge

volumes:
  db_data:
    name: my_postgres_data_volume # Nom explicite pour le volume