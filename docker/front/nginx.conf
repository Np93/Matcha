events {}

http {
    include       mime.types;
    default_type  application/octet-stream;

    types {
        text/css css;
        application/javascript js;
        image/svg+xml svg;
        image/png png;
        image/jpeg jpg;
        font/woff2 woff2;
        font/woff woff;
        font/ttf ttf;
    }

    upstream api {
        server backend:8000;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/ssl/localhost.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.key;

        root /usr/share/nginx/html;
        index index.html;

        # Fichiers statiques React/Tailwind
        location /static/ {
            root /usr/share/nginx/html;
            access_log off;
            expires 1y;
        }

        location /assets/ {
            root /usr/share/nginx/html;
            access_log off;
            expires 1y;
        }

        # Fallback pour React (SPA)
        location / {
            try_files $uri /index.html;
        }

        # Swagger Docs (optionnel)
        location /docs/ {
            proxy_pass http://api/docs/;
            proxy_set_header Host $host;
        }

        location /openapi.json {
            proxy_pass http://api/openapi.json;
            proxy_set_header Host $host;
        }

        # API REST
        location /api/ {
            rewrite ^/api/(.*)$ /$1 break;
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /auth/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # WebSocket - Chat
        location /chat/ws/ {
            proxy_pass http://api/chat/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        # WebSocket - Notifications
        location /notifications/ws/ {
            proxy_pass http://api/notifications/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}